{"version":3,"sources":["Components/NavLinks.js","Components/Navbar.js","Sections/Main.js","Sections/About.js","Components/Styles.js","Components/ScrollButton.js","Sections/Contact.js","Components/Scrolldown.js","App.js","reportWebVitals.js","index.js"],"names":["NavLinks","className","activeClass","to","spy","smooth","offset","duration","Navbar","props","context","state","clicked","check","setCheck","toggleMenu","bind","this","easing","onClick","setState","color","Component","Main","ReactGA","initialize","pageview","window","location","pathname","search","id","About","Button","styled","div","ScrollButton","useState","visible","setVisible","addEventListener","innerHeight","pageYOffset","document","body","offsetHeight","scrollTo","top","behavior","style","display","Contact","Scrolldown","scrollSection","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2QAmDeA,EAjDE,WACb,OACI,qBAAKC,UAAU,QAAf,SACoB,+BACI,6BACI,cAAC,OAAD,CACAC,YAAY,SACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IANV,oBAWJ,6BACI,cAAC,OAAD,CACAL,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IANV,qBAWJ,6BACI,cAAC,OAAD,CACAL,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IANV,6B,QCarBC,E,kDAnCX,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAHjBC,MAAQ,GAIJ,EAAKC,SAAU,EACf,EAAKD,MAAQ,CACXE,OAAO,EACPC,UAAU,GAGZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBARM,E,8CAW1B,WACE,OAAO,cAAC,EAAD,M,oBAEX,WAEE,OAAGC,KAAKN,MAAME,MACL,cAAC,EAAD,IAKH,qBAAKZ,UAAU,SAAf,SACI,cAAC,IAAD,CAAWiB,OAAO,UACdC,QAASF,KAAKG,SAAS,CAACP,OAAQI,KAAKN,MAAME,QAC3CQ,MAAM,kB,GA5BLC,a,QCeNC,E,4MAjBXZ,MAAQ,G,4CAGR,WAGI,OAFAa,IAAQC,WAAW,gBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAExD,qBAAK7B,UAAU,eAAe8B,GAAG,OAAjC,SACI,qBAAK9B,UAAU,YAAY8B,GAAG,YAA9B,SACQ,wD,GAVLT,aCOJU,E,4MAPXrB,MAAQ,G,4CACR,WACI,OAAO,qBAAKV,UAAU,gBAAgB8B,GAAG,c,GAH7BT,a,gCCMPW,GALUC,IAAOC,IAAV,uEAKED,IAAOC,IAAV,uLC4BJC,EAhCM,WAAM,IAAD,EAEMC,oBAAS,GAFf,mBAEjBC,EAFiB,KAERC,EAFQ,KAwBxB,OAFAZ,OAAOa,iBAAiB,UAlBF,WACfb,OAAOc,YAAcd,OAAOe,aAAgBC,SAASC,KAAKC,aAC3DN,GAAW,GAGXA,GAAW,MAgBf,cAACN,EAAD,UACC,cAAC,IAAD,CAAad,QAbI,WAClBQ,OAAOmB,SAAS,CACdC,IAAK,EACLC,SAAU,YAWXC,MAAO,CAACC,QAASZ,EAAU,SAAW,aCjB5Ba,E,4MAVXxC,MAAQ,G,4CACR,WACI,OAAQ,qBAAKV,UAAU,kBAAkB8B,GAAG,UAApC,SACJ,cAAC,EAAD,U,GAJUT,aC8BP8B,G,kNAhBXC,cAAgB,a,yDAPhB,WAEI,MAAO,CACLC,OAF8B3B,OAAxBc,e,oBAUZ,WAEI,OACI,qBAAKxC,UAAU,kBAAf,SACA,cAACgC,EAAD,UACI,cAAC,IAAD,CAAed,QAASF,KAAKoC,wB,GAlBpB/B,c,MCgBViC,MAZf,WACE,OACE,sBAAKtD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPSuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.c1c5f6e2.chunk.js","sourcesContent":["import { Link } from 'react-scroll';\r\n\r\nconst NavLinks = () => {\r\n    return(\r\n        <div className=\"links\">\r\n                            <ul>\r\n                                <li>\r\n                                    <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"main\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    >\r\n                                        Main\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"about\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    >\r\n                                        About\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"contact\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    >\r\n                                        Contact\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                                \r\n                            \r\n    </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NavLinks;","import React, { Component } from 'react';\r\nimport NavLinks from './NavLinks'\r\nimport { Sling as Hamburger } from 'hamburger-react';\r\nimport { useState } from 'react';\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = {};\r\n    \r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.clicked = false;\r\n        this.state = {\r\n          check: false,\r\n          setCheck: false\r\n        };\r\n       \r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n      }\r\n       \r\n      toggleMenu() {\r\n        return(<NavLinks />)\r\n      }\r\n    render () {\r\n      \r\n      if(this.state.check) {\r\n        return(<NavLinks />)\r\n      }\r\n      \r\n        return(\r\n          \r\n            <div className=\"navbar\">\r\n                <Hamburger easing=\"ease-in\"\r\n                    onClick={this.setState({check: !this.state.check})}\r\n                    color=\"#666699\" />\r\n                     \r\n                    \r\n                    \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import { React, Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass Main extends Component {\r\n    state = {};\r\n    \r\n\r\n    render() {\r\n        ReactGA.initialize('G-LN1KCMZQFC');\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n        return (\r\n            <div className=\"main-section\" id=\"main\">\r\n                <div className=\"main-text\" id=\"main-text\">\r\n                        <h1>Hey, I'm Ethan</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import { React, Component } from 'react';\r\n\r\nclass About extends Component {\r\n    state = {};\r\n    render() {\r\n        return <div className=\"about-section\" id=\"about\" />;\r\n    }\r\n\r\n}\r\n\r\nexport default About;","import styled from 'styled-components';\r\n  \r\n  \r\nexport const Content = styled.div`\r\n   overflowY: scroll;\r\n   height: 2500px;\r\n`;\r\n  \r\nexport const Button = styled.div`\r\n   position: fixed; \r\n   width: 100%;\r\n   bottom: 50px;\r\n   height: 15px;\r\n   font-size: 3rem;\r\n   z-index: 1;\r\n   cursor: pointer;\r\n   color: white;\r\n   `\r\n","import React, {useState} from 'react';\r\nimport {FiChevronUp} from 'react-icons/fi';\r\nimport { Button } from './Styles';\r\n  \r\nconst ScrollButton = () =>{\r\n  \r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const toggleVisible = () => {\r\n    if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight) {\r\n        setVisible(true)\r\n    }\r\n    else {\r\n        setVisible(false)\r\n    }\r\n  };\r\n  \r\n  const scrollToTop = () =>{\r\n    window.scrollTo({\r\n      top: 0, \r\n      behavior: 'smooth'\r\n      /* you can also use 'auto' behaviour\r\n         in place of 'smooth' */\r\n    });\r\n  };\r\n  \r\n  window.addEventListener('scroll', toggleVisible);\r\n  \r\n  return (\r\n    <Button>\r\n     <FiChevronUp onClick={scrollToTop} \r\n     style={{display: visible ? 'inline' : 'none'}} />\r\n    </Button>\r\n  );\r\n}\r\n  \r\nexport default ScrollButton;","import { React, Component } from 'react';\r\nimport ScrollButton from '../Components/ScrollButton';\r\n\r\nclass Contact extends Component {\r\n    state = {};\r\n    render() {\r\n        return (<div className=\"contact-section\" id=\"contact\">\r\n            <ScrollButton />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import { React, Component } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport { Button } from './Styles';\r\nimport {FiChevronDown} from 'react-icons/fi';\r\nimport { scrollMore } from 'react-scroll/modules/mixins/animate-scroll';\r\n\r\n\r\n\r\nclass Scrolldown extends Component {\r\n\r\n    getWindowDimensions() {\r\n        const { innerHeight: height } = window;\r\n        return {\r\n          height\r\n        };\r\n      }\r\n\r\n    scrollSection = () =>{\r\n        //scrollMore(window);\r\n    }\r\n    \r\n    render() {\r\n        //Render button to scroll down by 1 section\r\n        return(\r\n            <div className=\"scrollDownArrow\">\r\n            <Button>\r\n                <FiChevronDown onClick={this.scrollSection}></FiChevronDown>\r\n            </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scrolldown","import { React, useEffect } from 'react';\nimport Navbar from './Components/Navbar';\nimport Main from './Sections/Main';\nimport About from './Sections/About';\nimport Contact from './Sections/Contact';\nimport Scrolldown from './Components/Scrolldown.js';\n\n\n//styling\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Scrolldown />\n      <Main />\n      <About />\n      <Contact />   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}